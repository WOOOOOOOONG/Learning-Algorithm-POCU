package academy.pocu.comp3500.lab3.app;

import academy.pocu.comp3500.lab3.MissionControl;

import java.util.ArrayList;

public class Program {

    public static void main(String[] args) {
        {
            {
                final int[] altitudes = new int[]{1, 2, 3, 4, 5, 6, 7, 4, 3, 2};
                ArrayList<Integer> bounds = MissionControl.findAltitudeTimes(altitudes, 2);
                assert (bounds.size() == 2);
                assert (bounds.get(0) == 1);
                assert (bounds.get(1) == 9);
                System.out.println(bounds.size() == 2);
                System.out.println(bounds.get(0) == 1);
                System.out.println(bounds.get(1) == 9);
                bounds = MissionControl.findAltitudeTimes(altitudes, 5);
                assert (bounds.size() == 1);
                assert (bounds.get(0) == 4);
                System.out.println(bounds.size() == 1);
                System.out.println(bounds.get(0) == 4);
                final int[] altitudes2 = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
                ArrayList<Integer> bounds2 = MissionControl.findAltitudeTimes(altitudes2, 3);
                assert (bounds2.size() == 1);
                assert (bounds2.get(0) == 2);
                System.out.println(bounds2.size() == 1);
                System.out.println(bounds2.get(0) == 2);
                bounds2 = MissionControl.findAltitudeTimes(altitudes2, 10);
                assert (bounds2.size() == 1);
                assert (bounds2.get(0) == 9);
                System.out.println(bounds2.size() == 1);
                System.out.println(bounds2.get(0) == 9);
                bounds2 = MissionControl.findAltitudeTimes(altitudes2, 1);
                assert (bounds2.size() == 1);
                assert (bounds2.get(0) == 0);
                System.out.println(bounds2.size() == 1);
                System.out.println(bounds2.get(0) == 0);
                bounds2 = MissionControl.findAltitudeTimes(altitudes2, 11);
                assert (bounds2.size() == 0);
                System.out.println(bounds2.size() == 0);
                bounds2 = MissionControl.findAltitudeTimes(altitudes2, 0);
                assert (bounds2.size() == 0);
                System.out.println(bounds.size() == 0);
                final int[] altitudes3 = new int[]{10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
                ArrayList<Integer> bounds3 = MissionControl.findAltitudeTimes(altitudes3, 3);
                assert (bounds3.size() == 1);
                assert (bounds3.get(0) == 7);
                System.out.println(bounds3.size() == 1);
                System.out.println(bounds3.get(0) == 7);
                bounds3 = MissionControl.findAltitudeTimes(altitudes3, 10);
                assert (bounds3.size() == 1);
                assert (bounds3.get(0) == 0);
                System.out.println(bounds3.size() == 1);
                System.out.println(bounds3.get(0) == 0);
                bounds3 = MissionControl.findAltitudeTimes(altitudes3, 1);
                assert (bounds3.size() == 1);
                assert (bounds3.get(0) == 9);
                System.out.println(bounds3.size() == 1);
                System.out.println(bounds3.get(0) == 9);
                bounds3 = MissionControl.findAltitudeTimes(altitudes3, 11);
                assert (bounds3.size() == 0);
                System.out.println(bounds3.size() == 0);
                bounds3 = MissionControl.findAltitudeTimes(altitudes3, 0);
                assert (bounds3.size() == 0);
                System.out.println(bounds.size() == 0);
                bounds3 = MissionControl.findAltitudeTimes(altitudes3, 8);
                assert (bounds3.size() == 1);
                assert (bounds3.get(0) == 2);
                System.out.println(bounds3.size() == 1);
                System.out.println(bounds3.get(0) == 2);
                final int[] altitudes4 = new int[]{3, 5, 3};
                ArrayList<Integer> bounds4 = MissionControl.findAltitudeTimes(altitudes4, 5);
                assert (bounds4.size() == 1);
                assert (bounds4.get(0) == 1);
                System.out.println(bounds4.size() == 1);
                System.out.println(bounds4.get(0) == 1);
                bounds4 = MissionControl.findAltitudeTimes(altitudes4, 3);
                assert (bounds4.size() == 2);
                assert (bounds4.get(0) == 0);
                assert (bounds4.get(1) == 2);
                System.out.println(bounds4.size() == 2);
                System.out.println(bounds4.get(0) == 0);
                System.out.println(bounds4.get(1) == 2);
                final int[] altitudes5 = new int[]{3, 5};
                ArrayList<Integer> bounds5 = MissionControl.findAltitudeTimes(altitudes5, 5);
                assert (bounds5.size() == 1);
                assert (bounds5.get(0) == 1);
                System.out.println(bounds5.size() == 1);
                System.out.println(bounds5.get(0) == 1);
                bounds5 = MissionControl.findAltitudeTimes(altitudes5, 4);
                assert (bounds5.size() == 0);
                System.out.println(bounds5.size() == 0);
                final int[] altitudes6 = new int[]{3};
                ArrayList<Integer> bounds6 = MissionControl.findAltitudeTimes(altitudes6, 5);
                assert (bounds6.size() == 0);
                System.out.println(bounds6.size() == 0);
                bounds6 = MissionControl.findAltitudeTimes(altitudes6, 3);
                assert (bounds6.size() == 1);
                System.out.println(bounds6.size() == 1);
                final int[] altitudes7 = new int[]{1, 2, 3, 4, 5, 4, 3, 2};
                ArrayList<Integer> bounds7 = MissionControl.findAltitudeTimes(altitudes7, 2);
                assert (bounds7.size() == 2);
                assert (bounds7.get(0) == 1);
                assert (bounds7.get(1) == 7);
                System.out.println(bounds7.size() == 2);
                System.out.println(bounds7.get(0) == 1);
                System.out.println(bounds7.get(1) == 7);
                bounds7 = MissionControl.findAltitudeTimes(altitudes7, 1);
                assert (bounds7.size() == 1);
                assert (bounds7.get(0) == 0);
                System.out.println(bounds7.size() == 1);
                System.out.println(bounds7.get(0) == 0);
                bounds7 = MissionControl.findAltitudeTimes(altitudes7, 5);
                assert (bounds7.size() == 1);
                assert (bounds7.get(0) == 4);
                System.out.println(bounds7.size() == 1);
                System.out.println(bounds7.get(0) == 4);
                bounds7 = MissionControl.findAltitudeTimes(altitudes7, 4);
                assert (bounds7.size() == 2);
                assert (bounds7.get(0) == 3);
                assert (bounds7.get(1) == 5);
                System.out.println(bounds7.size() == 2);
                System.out.println(bounds7.get(0) == 3);
                System.out.println(bounds7.get(1) == 5);
                System.out.println("---------------");
                final int[] altitudes8 = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5};
                ArrayList<Integer> bounds8 = MissionControl.findAltitudeTimes(altitudes8, 7);
                assert (bounds8.size() == 2);
                assert (bounds8.get(0) == 6);
                assert (bounds8.get(1) == 8);
                System.out.println(bounds8.size() == 2);
                System.out.println(bounds8.get(0) == 6);
                System.out.println(bounds8.get(1) == 8);
                System.out.println("---------------");
                bounds8 = MissionControl.findAltitudeTimes(altitudes8, 5);
                assert (bounds8.size() == 2);
                assert (bounds8.get(0) == 4);
                assert (bounds8.get(1) == 10);
                System.out.println(bounds8.size() == 2);
                System.out.println(bounds8.get(0) == 4);
                System.out.println(bounds8.get(1) == 10);
            }
        }
    }
}